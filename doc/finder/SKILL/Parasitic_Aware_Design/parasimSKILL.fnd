;SKILL Language Functions
("aelDisplayOPParam"
"aelDisplayOPParam(
instName
simParam
[labelParam]
[resName]
)
=> string_list | nil"
"The aelDisplayOPParam function returns a string list whose elements are the simParam of each of the instances being processed.")
("auLvsGetLabelSuffix"
"auLvsGetLabelSuffix(
schInstanceName
param
)
=> suffix | nil"
"The auLvsGetLabelSuffix command can be used to return the label suffix that is used when annotating dcOp or transient op points.")
("aelSumOPParam"
"aelSumOPParam(
instName
simParam
[labelParam]
[resName]
)
=> integer | nil"
"The aelSumOPParam function returns a number which is the result of adding the values of the parameters specified by instName.")
("parCacheFind"
"parCacheFind(
t_libName
t_cellName
t_viewName
)
=> cache_id | nil"
"Finds an existing parasitic cache for a given design specified using library, cell and view names.")
("parCacheGet"
"parCacheGet(
t_libName
t_cellName
t_viewName
)
=> cache_id | nil"
"Finds an existing parasitic cache or creates and populates the cache for a given design, specified using library, cell and view names.")
("parCacheListFilters"
"parCacheListFilters(
d_cache
[g_includeOutOfContext]
)
=> filter_id_list | nil"
"Lists all parasitic filters from a given cache.")
("parCacheListModels"
"parCacheListModels(
d_cache
[g_includeOutOfContext]
)
=> model_id_list | nil"
"Lists all parasitic models from a given cache.")
("parCachePurge"
"parCachePurge(
d_cache
)
=> cache_id | nil"
"Purges a constraint cellview containing parasitic estimates from memory. Any changes not saved will be lost.")
("parCacheSave"
"parCacheSave(
d_cache
)
=> cache_id | nil"
"Saves a constraint cell view containing parasitic estimates.")
("parDelete"
"parDelete(
d_parasitic_id

)
=> t | nil"
"Deletes a parasitic model or filter. After deleting the object, the parasitic_id will be invalid.")
("parFilterCreate"
"parFilterCreate(
d_cache
?type S_type
?subtype S_subtype
?members l_member_list
?include S_include
?threshold f_threshold
?name t_name
?note t_note
?verbose g_verbose
)
=> filter_id | nil"
"Creates parasitic filters that refer to a given design object as a member.")
("parFind"
"parFind(
d_cache
t_name

)
=> parasitic_id | nil"
"Finds a parasitic model or filter in a given cache.")
("parModelCreateCustom"
"parModelCreateCustom(
d_cache
?net t_net
?simParams l_simParams
?simSweeps l_simSweeps
?parLib t_parLib
?parCell t_parCell
?parView t_parView
?terminalMap l_terminalMap
?name t_name
?note t_note
?verbose g_verbose
)
=> model_id | nil"
"Creates a new customization parasitic estimate model for selected nets. This model is defined in the cellview defined by the parLib, parCell, and parView arguments.")
("parModelCreateNetC"
"parModelCreateNetC(
d_cache
?net t_net
?type t_type
?extLib t_extLib
?extCell t_extCell
?extView t_extView
?netMap t_netMap
?include t_include
?threshold t_threshold
?members l_members
?simParams l_simParams
?simSweeps l_simSweeps
?name t_name
?note t_note
?verbose g_verbose
)
=> model_id | nil"
"Creates a new parasitic capacitance estimate between two nets.")
("parModelCreateNetK"
"parModelCreateNetK(
d_cache
?members t_members
?simParams l_simParams
?simSweeps l_simSweeps
?name t_name
?note t_note
?verbose g_verbose
)
=> model_id | nil"
"Creates new parasitic mutual-inductance estimate models between the inductance of the specified instance terminals. The members specified are the instance terminals whose estimate inductance is to be considered creating mutual inductance. If the instance terminals do not have an associated estimate inductance, that will be created as a side-effect.")
("parModelCreateNetL"
"parModelCreateNetL(
d_cache
?net t_net
?type t_type
?extLib t_extLib
?extCell t_extCell
?extView t_extView
?extNet t_extNet
?terminalMap l_terminalMap
?include t_include
?threshold t_threshold
?members t_members
?simParams l_simParams
?simSweeps l_simSweeps
?name t_name
?note t_note
?verbose g_verbose
)
=> model_id | nil"
"Creates a new parasitic inductance estimate model for a net. The model is star-shaped with an inductance connecting members to a central node. The members are the instance terminals connecting instances to the net. Also included are the terminals of the net. The member list provides an option to specify the list of instance terminals to include. If the members list is nil, all instances of the net are selected.")
("parModelCreateNetR"
"parModelCreateNetR(
d_cache
?net t_net
?type t_type
?extLib t_extLib
?extCell t_extCell
?extView t_extView
?extNet t_extNet
?terminalMap l_terminalMap
?include t_include
?threshold t_threshold
?members l_members
?simParams l_simParams
?simSweeps l_simSweeps
?name t_name
?note t_note
?verbose g_verbose
)
=> model_id | nil"
"Creates a new parasitic resistance model.")
("parModelListSimParams"
"parModelListSimParams(
d_model_id
)
=> sim_param_list | nil"
"Lists the suimulation parameters associated with a parasitic estimate. These are the parameters that will be set on the parasitic model that is inserted into the netlist.")
("parModelListSimSweeps"
"parModelListSimSweeps(
d_model_id
)
=> sim_sweep_list | nil"
"Lists the simulation sweeps associated with a parasitic estimate.")
("parModelUpdateSimParams"
"parModelUpdateSimParams(
d_model_id
l_sim_param_list
)
=> t | nil"
"Updates the values of the listed simulation parameters.")
("parModelUpdateSimSweeps"
"parModelUpdateSimSweeps(
d_model_id
l_sim_sweep_list
)
=> t | nil"
"Updates the sweeps of the listed simulation parameters.")
("parObjectListFilters"
"parObjectListFilters(
d_cache
t_design_object_name
t_design_object_type
)
=> filter_id_list | nil"
"Lists all parasitic filters that refer to a given design object as a member.")
("parObjectListModels"
"parObjectListModels(
d_cache
t_design_object_name
t_design_object_type
)
=> model_id_list | nil"
"Lists all parasitic models that refer to a given design object as a member.")
("parRemoveMembers"
"parRemoveMembers(
d_parasitic_id
l_member_index_list

)
=> t | nil"
"Removes members from a parasitic model or filter.")
("parResetAllParams"
"parResetAllParams(
d_parasitic_id

)
=> t | nil"
"Resets all model or filter parameters to default values.")
("parResetParams"
"parResetParams(
d_parasitic_id
l_parameter_name_list

)
=> t | nil"
"Resets given model or filter parameters to default values.")
("parSetNote"
"parSetNote(
d_parasitic_id
t_note_string

)
=> t | nil"
"Replaces the note on a parasitic model or filter.")
("parUpdateMembers"
"parUpdateMembers(
d_parasitic_id
l_member_list

)
=> t | nil"
"Updates parasitic model or filter members and their parameters. Existing members will have their parameter list updated and new members will be added at the end.")
("parUpdateParams"
"parUpdateParams(
d_parasitic_id
l_parameter_list

)
=> t | nil"
"Updates the parameter values of the listed parameters. Default values will reset the parameter to default and the storage for the default value will be deleted. Enumerated values will be reset first, then updated rather than appened.")
("mspsMapNetName"
"mspsMapNetName(
h_hdbConfigId
t_name
)
=> t_frag_name | nil"
"Maps a hierarchical schematic net name to a fragment of the equivalent net in the extracted view.")
("axlGetParasiticViewName"
"axlGetParasiticViewName(
t_sessionName
t_flowName
)
=> t_viewName"
"Gets the name of the parasitic view set for the given flow in ADE XL.")
("axlMapInstTermToNet"
"axlMapInstTermToNet(
t_instPathName
t_termName
[t_dataDir]
[g_verbose]
)
=> t_netName"
"This function is useful while doing out-of-context probing with a config view. It maps an instance terminal to its corresponding net connection in the configured view, which can be a schematic, a parasitic/LDE, or an extracted view. Instead of directly using net names in calculator expressions (in an ADE output), you can call axlMapInstTermToNet from within the expression to dynamically return the name of the net connected to an instance terminal. In this case, even if the configured view is modified and the net connected to a terminal is changed, the calculator function can get the correct net name connected to the given instance terminal.")
("axlSetParasiticViewName"
"axlSetParasiticViewName(
t_sessionName
t_flowName
t_viewName
)
=> t_viewName"
"Sets the name of the parasitic view to be used for the given flow in ADE XL.")