;SKILL Language Functions
("poCellNameMap"
"poCellNameMap(
t_lib
t_cell
t_view
)
=> t_mapName / nil"
"Passes the library name, cell name and the view name for each cell in the library to a user-defined procedure.")
("poLayerMap"
"poLayerMap(
t_layerName
t_purposeName
)
=> l_layerDatatype / nil"
"This is a user-defined function that passes the layer number and datatype for each layer in the input Stream file, when it is called. Stream Out interprets the output of the procedure in the same way it interprets the OpenAccess name and purpose. However, Stream Out checks for this function only if the layer map file (-layerMap option) is not specified. If the layer map file is specified, the poLayerMap function is ignored. For more information, see the Layer Map File section.")
("textFontMap"
"textFontMap(
t_fontName
)
=> l_streamFont / nil"
"Passes each font type in a Design Framework II library to a user-defined procedure.")
("piCellNameMap"
"piCellNameMap(
t_cell
)
=> l_cellview / nil"
"Passes the cell name for each cell name in the input file to a user-defined procedure.")
("piLayerMap"
"piLayerMap(
x_layer
x_dataType
)
=> l_lpp / nil"
"This is a user-defined function that passes the layer number and datatype for each layer in the input Stream file, when it is called. Stream In interprets the output of the procedure in the same way it interprets the OpenAccess name and purpose. However, Stream In checks for this function only if the layer map file (-layerMap option) is not specified. If the layer map file is specified, the piLayerMap function is ignored. For more information, see the Layer Map File section.")
("piTextMap"
"piTextMap(
t_label
)
=> t_changedLabel"
"Modifies the text that is translated from the Stream file to a dfII library.")
("poTextMap"
"poTextMap(
t_label
)
=> t_changedLabel"
"Modifies the text that is translated from the dfII library to the Stream file.")
("poParamCellNameMap"
"poParamCellNameMap( 
t_name
d_cvid
)
=> t_mapName"
"This is a user-defined function that is called with the parameterized cell name (super-master name) and sub-master cellView identifier. Stream Out interprets the output of the procedure in the same way as it interprets the translated name for the parameterized cell.")
("poPreTranslate"
"poPreTranslate(
lib
cell
view
)"
"During StreamOut, this function is called just before the translation starts.")
("poPostTranslate"
"poPostTranslate(
lib
cell
view
)"
"During StreamOut, this function is called just after the translation is completed.")
("piPreTranslate"
"piPreTranslate(
lib
cell
view
)"
"During StreamIn, this function is called just before the translation starts.")
("piPostTranslate"
"piPostTranslate(
lib
cell
view
)"
"During XStream In translation, this function is called just after the translation is completed. If the -topCell option is not specified, piPostTranslate is called with all the top cells found during Xstream In translation as a string of space separated names.")
("xstInOnCancel"
"xstInOnCancel()"
"This is a user-defined function, which is called when user presses the Cancel button.")
("xstInOnTranslate"
"xstInOnTranslate()"
"This is a user-defined function, which is called when user presses the Apply or Translate button.")
("xstInOnCompletion"
"xstInOnCompletion(x_num)"
"This is a user-defined function, which is called when the translation is completed.")
("xstOutOnCancel"
"xstOutOnCancel()"
"This is a user-defined function, which is called when user presses the Cancel button.")
("xstOutOnTranslate"
"xstOutOnTranslate()"
"This is a user-defined function, which is called when user presses the Apply or Translate button.")
("xstOutOnCompletion"
"xstOutOnCompletion(x_num)"
"This is a user-defined function, which is called when the translation is completed.")
("xstInGetField"
"xstInGetField(
t_optionName
)
=> t_value / nil"
"Enables you to access GUI field values from the XStream In form. You can access all the GUI field values using the appropriate option name.")
("xstGetField"
"xstGetField(
	t_optionName
	)
	=> t_value / nil"
"Enables you to access GUI field values from the XStream Out form. You can access all the GUI field values using the appropriate option name.")
("xstInSetField"
"xstInSetField(
t_optionName
t_value
)
=> t / nil"
"Enables you to populate GUI field values in the XStream In form. You can populate all the GUI field values using the appropriate option name and value.")
("xstSetField"
"xstSetField(
	t_optionName
	t_value
	)
	=> t / nil"
"Enables you to populate GUI field values in the XStream Out form. You can populate all the GUI field values using the appropriate option name and value.")
("xstOutDoTranslate"
"xstOutDoTranslate()"
"Issues the StreamOut command based on the GUI field values. By default, this function is a non-blocking function. However, if the Stream Out From Virtual Memory option is selected, then this function becomes a blocking function.")
("xstInDoTranslate"
"xstInDoTranslate()"
"Issues the StreamIn command based on the GUI field values. By default, this function is a non-blocking function. However, if the Stream In to Virtual Memory option is selected, then this function becomes a blocking function.")
("xstInGetVMLibs"
"xstInGetVMLibs(
)
=> l_vmLibList / nil"
"Returns the list of virtual memory libraries created by XStream In. Only the primary libraries created by XStream In are returned. The additional libraries that are created if the number of cellviews is more than the value specified in the Maximum Cells in Target Library field are not returned by this function.")
("xstInSaveVMLib"
"xstInSaveVMLib(
t_vmLibName
[ t_path ]
)
=> t / nil"
"Saves the specified virtual memory library, t_vmLibName, to either the specified directory, t_path, or the current working directory, if t_path is not specified. Multiple libraries are created in a single translation using XStream In if the number of cellviews is more than the value specified in the Maximum Cells in Target Library field. All the libraries created during a single XStream In translation are also saved.")
("xstInOnCancelCB"
"xstInOnCancelCB(
t_mode
S_callbackFunction
)
=> t / nil"
"Registers or unregisters a user-defined callback function when you click the Cancel button on the XStream In form.")
("xstInOnCompletionCB"
"xstInOnCompletionCB(
t_mode
S_callbackFunction
)
=> t / nil"
"Registers or unregisters a user-defined callback function when the XStream In translation is complete.")
("xstInOnTranslateCB"
"xstInOnTranslateCB(
t_mode
S_callbackFunction
)
=> t / nil"
"Registers or unregisters a user-defined callback function when you click the Apply or Translate button on the XStream In form")
("xstOutOnCancelCB"
"xstOutOnCancelCB(
t_mode
S_callbackFunction
)
=> t / nil"
"Registers or unregisters a user-defined callback function when you click the Cancel button on the XStream Out form.")
("xstOutOnCompletionCB"
"xstOutOnCompletionCB(
t_mode
S_callbackFunction
)
=> t / nil"
"Registers or unregisters a user-defined callback function when the XStream Out translation is complete.")
("xstOutOnTranslateCB"
"xstOutOnTranslateCB(
t_mode
S_callbackFunction
)
=> t / nil"
"Registers or unregisters a user-defined callback function when you click the Apply or Translate button on the XStream Out form")
("xoasInOnCancel"
"xoasInOnCancel()"
"This is a user-defined function, which is called when you press the Cancel button.")
("xoasInOnTranslate"
"xoasInOnTranslate()"
"This is a user-defined function, which is called when you press the Apply or Translate button.")
("xoasInOnCompletion"
"xoasInOnCompletion(
t_num
)
=> t_num"
"This is a user-defined function, which is called when the translation is completed.")
("xoasOutOnCancel"
"xoasOutOnCancel()"
"This is a user-defined function, which is called when you press the Cancel button.")
("xoasOutOnTranslate"
"xoasOutOnTranslate()"
"This is a user-defined function, which is called when you press the Apply or Translate button.")
("xoasOutOnCompletion"
"xoasOutOnCompletion(
t_num
)
=> t_num"
"This is a user-defined function, which is called when the translation is completed.")
("xoasInGetField"
"xoasInGetField(
t_optionName
)
=> t_value / nil"
"Enables you to access GUI field values from the XOasis In form. You can access all the GUI field values using the appropriate option name.")
("xoasInSetField"
"xoasInSetField(
t_optionName
t_value
)
=> t / nil"
"Enables you to populate GUI field values in the XOasis In form. You can populate all the GUI field values using the appropriate option name and value.")
("xoasInDoTranslate"
"xoasInDoTranslate()"
"Issues the XOasis In command based on the GUI field values. By default, this function is a non-blocking function. However, if the Import OASIS into Virtual Memory option is selected, then this function becomes a blocking function.")
("xoasOutGetField"
"xoasOutGetField(
t_optionName
)
=> t_value / nil"
"Enables you to access GUI field values from the XOasis Out form. You can access all the GUI field values using the appropriate option name.")
("xoasOutSetField"
"xoasOutSetField(
t_optionName
t_value
)
=> t / nil"
"Enables you to populate GUI field values in the XOasis Out form. You can populate all the GUI field values using the appropriate option name and value.")
("xoasOutDoTranslate"
"xoasOutDoTranslate()"
"Issues the XOasis Out command based on the GUI field values. By default, this function is a non-blocking function. However, if the Export OASIS from Virtual Memory option is selected, then this function becomes a blocking function.")
("xoasInOnCancelCB"
"xoasInOnCancelCB(
t_mode
S_callbackFunction
)
t / nil"
"Registers or unregisters a user-defined callback function when you click the Cancel button on the XOasis In form.")
("xoasInOnCompletionCB"
"xoasInOnCompletionCB(
t_mode
S_callbackFunction
)
=> t / nil"
"Registers or unregisters a user-defined callback function when the XOasis In translation is complete.")
("xoasInOnTranslateCB"
"xoasInOnTranslateCB(
t_mode
S_callbackFunction
)
=> t / nil"
"Registers or unregisters a user-defined callback function when you click the Apply or Translate button on the XOasis In form.")
("xoasOutOnCancelCB"
"xoasOutOnCancelCB(
t_mode
S_callbackFunction
)
=> t / nil"
"Registers or unregisters a user-defined callback function when you click the Cancel button on the XOasis Out form.")
("xoasOutOnCompletionCB"
"xoasOutOnCompletionCB(
t_mode
S_callbackFunction
)
=> t / nil"
"Registers or unregisters a user-defined callback function when the XOasis Out translation is complete.")
("xoasOutOnTranslateCB"
"xoasOutOnTranslateCB(
t_mode
S_callbackFunction
)
=> t / nil"
"Registers or unregisters a user-defined callback function when you click the Apply or Translate button on the XOasis Out form")
("spcinGuiDisplay"
"spcinGuiDisplay()
=> t / nil"
"Displays the Virtuoso SpiceIn form.")
("auCdlAlwaysAddPrefixInInstName"
"auCdlAlwaysAddPrefixInInstName(
)
=> t / nil"
"Enables you to use the simAlwaysAddPrefixInInstName variable to prefix instance names with the namePrefix of a device type based on your auCdl netlisting requirements.")
("hnlCDLPrintBJTElement"
"hnlCDLPrintBJTElement()"
"Prints the CDL syntax of an instance of the BJT element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintGeneralElement"
"hnlCDLPrintGeneralElement()"
"Prints the CDL syntax of an instance of any general element. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintICIsrcElement"
"hnlCDLPrintICIsrcElement()"
"Prints the CDL syntax of an instance of an ICIsrc element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintICVsrcElement"
"hnlCDLPrintICVsrcElement()"
"Prints the CDL syntax of an instance of an ICVsrc element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintCds_Thru"
"hnlCDLPrintCds_Thru()"
"Prints the CDL syntax of an instance of a Cds_Thru element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintInductorElement"
"hnlCDLPrintInductorElement()"
"Prints the CDL syntax of an instance of an Inductor element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintIsrcElement"
"hnlCDLPrintIsrcElement()"
"Prints the CDL syntax of an instance of an Isrc element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintJfetElement"
"hnlCDLPrintJfetElement()"
"Prints the CDL syntax of an instance of a Jfet element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintNMOSfetElement"
"hnlCDLPrintNMOSfetElement()"
"Prints the CDL syntax of an instance of a NMOSfet element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintNPNElement"
"hnlCDLPrintNPNElement()"
"Prints the CDL syntax of an instance of a NPN element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintPMOSfetElement"
"hnlCDLPrintPMOSfetElement()"
"Prints the CDL syntax of an instance of a PMOSfet element in the netlist . An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintPNPElement"
"hnlCDLPrintPNPElement()"
"Prints the CDL syntax of an instance of a PNP element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintResistorElement"
"hnlCDLPrintResistorElement()"
"Prints the CDL syntax of an instance of a Resistor element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintSchottkyTranElement"
"hnlCDLPrintSchottkyTranElement()"
"Prints the CDL syntax of an instance of a SchottkyTran element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintTlineElement"
"hnlCDLPrintTlineElement()"
"Prints the CDL syntax of an instance of a Tline element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintVCIsrcElement"
"hnlCDLPrintVCIsrcElement()"
"Prints the CDL syntax of an instance of a VCIsrc element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintVCVsrcElement"
"hnlCDLPrintVCVsrcElement()"
"Prints the CDL syntax of an instance of a VCVsrc element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintVsrcElement"
"hnlCDLPrintVsrcElement()"
"Prints the CDL syntax of an instance of a Vsrc element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintMultiCNPNElement"
"hnlCDLPrintMultiCNPNElement()"
"Prints the CDL syntax of an instance of a MultiCNPN element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintMultiCPNPElement"
"hnlCDLPrintMultiCPNPElement()"
"Prints the CDL syntax of an instance of a MultiCPNP element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintMultiENPNElement"
"hnlCDLPrintMultiENPNElement()"
"Prints the CDL syntax of an instance of a MultiENPN element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintMultiEPNPElement"
"hnlCDLPrintMultiEPNPElement()"
"Prints the CDL syntax of an instance of a MultiEPNP element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintCapElement"
"hnlCDLPrintCapElement()"
"Prints the CDL syntax of an instance of a cap element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintCapacitorElement"
"hnlCDLPrintCapacitorElement()"
"Prints the CDL syntax of an instance of a capacitor element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintDiodeElement"
"hnlCDLPrintDiodeElement()"
"Prints the CDL syntax of an instance of a diode element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintBSIM3SOIElement"
"hnlCDLPrintBSIM3SOIElement()"
"Prints the CDL syntax of an instance of a BSIM3SOI element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintResElement"
"hnlCDLPrintResElement()"
"Prints the CDL syntax of an instance of a Res element in the netlist. An example of the syntax is shown below; if you are viewing this description in the SKILL API Finder, click More Info to see it.")
("hnlCDLPrintInstPropVal"
"hnlCDLPrintInstPropVal(
t_propName
)"
"Prints an instance property value in the CDL netlist during netlisting.")
("transCdlOutDisplay"
"transCdlOutDisplay()"
"Invokes the CDL Out GUI form.")
("ldtrLefReadOA"
"ldtrLefReadOA(
t_fileName
t_libName
[ t_libPath ]
[ t_techName ]
[ t_techPath ]
[ g_overwriteTech { t | nil } ]
[ g_shared { t | nil } ] 
[ t_viewName ]
[ t_logName logName ]
[ t_layermapFileName ]
[ t_commentChar ]
[ t_templateFileName ]
[ t_pinpurp ]
[ t_textLayer ]
[ t_textHeight ]
[ t_techRefs ]
[ g_compress { t | nil }]
[ t_compressLevel ]
[ g_mapConflicts { t | nil }]
[ g_pnrLibDataOnly { t | nil } ]
[ g_useFoundryInnovus { t | nil } ]
[ g_useTextLayerFromPin {t |nil} ]
[ t_textPurposeName ]
[ g_keepOrigDisplayDrf {t |nil} ]
[ g_lockColorData { t | nil }]
)
=> t / nil"
"Reads the specified LEF file into an OpenAccess library. t_lockColorData is an advanced nodes only argument.")
("ldtrLefWriteOA"
"ldtrLefWriteOA(
t_fileName
t_libName
[ t_cellNames ]
[ t_cellListFileName ]
[ t_viewNames ]
[ t_logName ]
[ g_noTech { t | nil } ]
[ t_version ]
[ g_techOnly { t | nil } ]
[ t_templateFileName ]
[ g_useFoundryInnovus { t | nil}]
[ g_lockedColorOnly { t | nil }]
)
=> t / nil"
"Writes a LEF file from a specified OpenAccess library. t_lockedColorOnly is an advanced nodes only argument.")
("ldtrDefReadOA"
"ldtrDefReadOA(
t_fileName
t_libName
[ t_libPath ]
[ t_cellName ]
[ t_viewName ]
[ t_techName ]
[ t_viewNameList ]
[ t_masterLibs ]
[ g_shared  { t | nil } ]
[ g_noRouting  { t | nil } ]
[ t_logName ]
[ g_useCustomVias  { t | nil } ]
[ g_overwrite  { t | nil } ]
[ g_createModHier  { t | nil } ]
[ t_commentChar commentChar ]
[ t_templateFileName ]
[ t_layermapFileName ]
[ t_techRefs ]
[ t_pinpurp ]
[ g_compress { t | nil } ]
[ t_compressLevel ]
[ g_ignoreDrcFill { t | nil } ]
[ t_userSkillFile ]
[ g_lockColorData { t | nil } ]
[ t_oaMapFile ]
)
=> t / nil"
"Reads the specified DEF file into an OpenAccess library. t_lockColorData is an advanced nodes only argument.")
("ldtrDefWriteOA"
"ldtrDefWriteOA(
t_fileName
t_libName
t_cellName
t_viewName 
[ t_logName ]
[ t_version ]
[ t_templateFileName ]
[ g_skipNoneOrViaCellType ]
[ t_mapDividerChar ]
[ t_dividerChar ]
[ t_busbitChars ]
[ g_outputFloatingShapes { t | nil } ]
[ g_warnOnNotPlacedInsts { t | nil } ]
[ g_skipPhysOnlyInsts { t | nil }]
[ g_gdsCompatible ]
[ t_userSkillFile ]
[ t_noDefOnError { t | nil } ]
[ g_lockedColorOnly { t | nil } ]
[ g_skipTrimShapes { t | nil } ]
[ g_skipTrimProductShapes { t | nil } ]
[ g_genBridgeMetalShapes { t | nil } ]
[ g_outputTrimSegsAsNets { t | nil } ]
[ t_maskShiftLayer ]
[ t_oaMapFile ]
[ g_skipTrimmedShapes { t | nil } ]
[ t_errorOnGrayShapes { t | nil } ]
[ t_errorOnUnlockedShapes { t | nil } ]
)
=> t / nil"
"Creates a DEF file from a specified OpenAccess library.")
("defoutPreTranslate"
"defoutPreTranslate(
lib
cell
view
)"
"During DEF Out, this function is called just before the translation starts.")
("defoutPostTranslate"
"defoutPostTranslate(
lib
cell
view
)"
"During DEF Out, this function is called just after the translation is completed.")
("definPreTranslate"
"definPreTranslate(
lib
cell
view
)"
"During DEF In, this function is called just before the translation starts.")
("definPostTranslate"
"definPostTranslate(
lib
cell
view
)"
"During DEF In translation, this function is called just after the translation is completed.")