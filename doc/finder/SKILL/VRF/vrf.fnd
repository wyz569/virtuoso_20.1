;SKILL Language Functions
("vrfExportLayoutSkill"
"vrfExportLayoutSkill(
x_cellViewId
g_frontPinLayer
g_backPinLayer
[ ?dieInterfaceType g_dieInterfaceType ]
[ ?includeUnconnectedBump g_includeUnconnectedBump ]
[ ?pinNumbering g_pinNumbering ]
[ ?pinNumberFile g_pinNumberFile ]
[ ?abstractLib g_abstractLib ]
[ ?ecoMode g_ecoMode ]
[ ?attachSParam g_attachSParam ]
[ ?sParamView g_sParamView ]
[ ?modelFile g_modelFile ]
[ ?shortPinLib g_shortPinLib ]
[ ?shortPinCell g_shortPinCell ]
[ ?frontLabelLPP g_frontLabelLPP ]
[ ?backLabelLPP g_backLabelLPP ]
[ ?csvFileName g_csvFileName ]
[ ?areaTransferFile g_areaTransferFile ]
[ ?exportNoBumpTerm g_exportNoBumpTerm ]
)
=> t / nil"
"Exports the die for both IC and package layouts. The function supports both IO cell and Shape with overlapping label as Die Interface Type. It generates a package type library that contains abstract, Technology Independent Layout Pcells (TILPs), schematic, and symbol views. The abstract view is the base cellview for the Pcell generated layout, that is, TILP. The schematic is the wrapper schematic for the IC symbol. The symbol view is used to instantiate the generated die symbol in a package schematic. For details, see Exporting the Die.")
("vrfExportPackage"
"vrfExportPackage(
g_cellViewId
t_frontPinLayer
t_backPinLayer
[ ?instanceNames t_instanceNames ]
[ ?abstractLib t_abstractLib ]
[ ?ecoMode g_ecoMode ]
[ ?attachSParam g_attachSParam ]
[ ?sParamView t_sParamView ]
[ ?modelFile t_modelFile ]
[ ?shortPinLib t_shortPinLib ]
[ ?shortPinCell t_shortPinCell ]
[ ?csvFileName t_csvFileName ]
[ ?abstractViewCell t_abstractViewCell ]
)
=> t / nil"
"Exports the specified package layout if its sipObjectType value is set to package. Use the instanceNames argument to specify the instance names to search master views for identifying candidate IO cells to be exported. The IO cells to be exported should have the cellType defined as coverBump or pad. The shapes in the master views must match the front or back layer-purpose pairs specified in the SKILL function arguments. Only the sub-master views of the package instances and IO cells are processed, not the super-master views.")
("vrfLowerPriority"
"vrfLowerPriority(
d_dynShapeId
)
=> t / nil"
"(ICADVM20.1 Only - Virtuoso MultiTech Framework) Lowers the priority of a specified dynamic shape so that it is one unit less than the lowest priority currently set for dynamic shapes on the layer.")
("vrfRaisePriority"
"vrfRaisePriority(
d_dynShapeId
)
=> t / nil"
"(ICADVM20.1 Only - Virtuoso MultiTech Framework) Raises the priority of a specified dynamic shape so that it is one unit higher than the maximum priority currently set for dynamic shapes on the layer.")
("vrfSipSet"
"vrfSipSet(
d_objID
t_attrName
g_attrValue
)
=> t / nil"
"(ICADVM20.1 Only - Virtuoso MultiTech Framework) Sets attributes for a specified object.")
("vrfSipGet"
"vrfSipGet(
d_objID
t_attrName
)
=> g_attrValue / nil"
"(ICADVM20.1 Only - Virtuoso MultiTech Framework) Retrieves values of a specified attribute of an object.")
("vrfTLineAbut"
"vrfTLineAbut(
t_instA
t_instB
t_pinA
t_pinB
t_pinAside
t_conn
n_event
d_group
d_chain
)
=> t / nil"
"Abuts two transmission line instances with the required specifications and issues a warning if the device cannot be abutted.")