;SKILL Language Functions
("vdrCheckVoltageLabels"
"vdrCheckVoltageLabels(
d_cellviewID
[ t_reportFilename ]
[ g_enablePopup ]
)
=> t / nil"
"Verifies that all top-level nets in the specified layout cellview are correctly labeled on the canvas.")
("vdrCreateVoltageLabel"
"vdrCreateVoltageLabel(
d_cellviewID
lt_datasetName
t_lowVPurposeName
t_highVPurposeName
[ f_labelHeight ]
[ g_externalNets ]
[ g_internalNets ]
[ g_update ]
[ g_generateLabels ]
[ g_overrideMode ]
[ x_hierStopLevel ]
[ u_customFunc ]
[ u_postLabelCreationCB ]
[ t_voltageInfoFile ]
[ t_layerPurposeFile ]
[ g_verbose ]
[ t_logFile ]
[ g_propagateNetVoltages ]
[ lt_sourceName ]
)
=> t / nil"
"Creates labels on the nets in a layout design reflecting the minimum and maximum voltages from simulation data or a specified list of sources.")
("vdrCreateVoltageLabelEx"
"vdrCreateVoltageLabelEx(
d_cellviewID
lt_datasetName
t_lowVPurposeName
t_highVPurposeName
[ ?labelHeight f_labelHeight ]
[ ?externalNet { t | nil } ]
[ ?internalNet { t | nil } ]
[ ?update { t | nil } ]
[ ?generateLabel { t | nil } ]
[ ?overrideMode { t | nil } ]
[ ?hierStopLevel x_hierStopLevel ]
[ ?customFunc u_customFunc ]
[ ?postLabelCreationCB u_postLabelCreationCB ]
[ ?dataFile t_voltageInfoFile ]
[ ?lppFile t_layerPurposeFile ]
[ ?verbose { t | nil } ]
[ ?logFile t_logFile ]
[ ?propagateNetVoltages { t | nil } ]
[ ?source lt_sourceName ]
)
=> t / nil"
"Creates labels on the nets in a layout design reflecting the minimum and maximum voltages from simulation data or a specified list of sources.")
("vdrCreateVoltageLabelOnNets"
"vdrCreateVoltageLabelOnNets(
d_cellviewID
ld_netIDs
t_lowVPurposeName
t_highVPurposeName
[ f_labelHeight ]
[ u_customFunc ]
[ lt_ignoreZeroVoltNets ]
[ u_postLabelCreationCB ]
[ t_layerPurposeFile ]
)
=> t / nil"
"Creates labels from the voltage values entered manually in the Property Editor assistant for the specified top-level nets in the given cellview. The labels are created on the geometry of the net in question. Where there is no geometry, the labels are created on all the Pcell and instance terminals connected to the net. The command works only in Layout XL and higher tiers.")
("vdrCreateVoltageMarkers"
"vdrCreateVoltageMarkers(
d_cellviewID
t_voltagePurposeFile
[ ?dataset t_datasetName ]
[ ?update { t | nil } ]
[ ?override_mode { t | nil } ]
[ ?size f_markerHeight ]
[ ?externalNet { t | nil } ]
[ ?internalNet { t | nil } ]
[ ?hierStopLevel x_hierStopLevel ]
[ ?postMarkerCreationCB u_postMarkerCreationCB ]
[ ?csvFile t_voltageInfoFile ]
[ ?voltageRounding { roundOff | floor | ceiling } ]
[ ?mode { maxVoltage | minVoltage | bothVoltage } ]
)
=> t / nil"
"Creates markers for minimum and/or maximum voltages on the nets in the specified design. Voltage information can be taken from simulation datasets, from user-defined voltages on nets, or from a voltage information file. The voltage purpose file specifies on which layer-purpose pair a marker is created depending on the voltage value in question.")
("vdrCreateVoltageMarkersOnNets"
"vdrCreateVoltageMarkersOnNets(
d_cellviewID
ld_netIDs
t_voltagePurposeFile
[ ?size f_markerHeight ]
[ ?postMarkerCreationCB t_postMarkerCreationCB ]
[ ?voltageRounding { roundOff | floor | ceiling } ]
[ ?voltageMode { maxVoltage | minVoltage | bothVoltage } ]
[ ?ignoreZeroVoltNets lt_netNames ]
)
=> t / nil"
"Creates markers from the voltage values entered manually in the Property Editor assistant for the specified top-level nets in the given cellview.")
("vdrCreateVSyncConstraintsFromFile"
"vdrCreateVSyncConstraintsFromFile(
t_libName
t_cellName
t_viewName
t_fileName
)
=> nil"
"(ICADVM20.1 Only) Creates Voltage Synced Net (vsync) constraints in the specified source schematic cellview based on information from the given CSV file. The schematic view is opened in read-only mode.")
("vdrDeleteLabels"
"vdrDeleteLabels(
d_cellviewID
)
=> nil"
"Deletes from the specified cellview all the labels and markers created using the VDR flows.")
("vdrGenerateLabelsGUI"
"vdrGenerateLabelsGUI(
)
=> t / nil"
"Opens the Voltage Dependent Rules form, which you can use to create voltage labels or markers on nets. The command works only in Layout XL and higher tiers.")
("vdrGenerateVSyncShapes"
"vdrGenerateVSyncShapes(
d_cellviewID
)
=> t / nil"
"(ICADVM20.1 EXL Only) Creates voltage sync (vsync) shapes between nets that are constrained by a common voltage sync constraint.")
("vdrGetValidLayers"
"vdrGetValidLayers(
)
=> l_layers / nil"
"Returns the list of valid layers on which labels or markers can be generated. The list was specified previously using the vdrSetValidLayers function.")
("vdrRunSanityChecker"
"vdrRunSanityChecker(
d_cellviewID
[ g_checkMarkers ]
[ g_checkAgainstLayout ]
[ f_tolerance ]
[ g_isToleranceAbsolute ]
[ t_logFile ]
)
=> t / nil"
"Checks constrained voltage labels in the layout against the voltage values stored in the schematic or layout net properties and reports any discrepancies between the values. You can optionally apply a threshold up to which mismatches are tolerated and not reported. You can also specify the location and name of a log file in which the report is captured.")
("vdrRunVSyncSanityChecker"
"vdrRunVSyncSanityChecker(
d_cellviewID
[ t_logFile ]
)
=> t / nil"
"(ICADVM20.1 EXL Only) Checks whether there are valid voltage sync (vsync) shapes on nets that are constrained by a common vsync constraint. The checker reports any vsync shapes that are wrongly created and any nets that have a vsync constraint defined but no vsync shape between them.")
("vdrSanityCheckerGUI"
"vdrSanityCheckerGUI(
)
=> t / nil"
"Opens the VDR Sanity Checker form, which you can use to check constrained VDR voltage labels in the layout view and report any labels that are missing or which have values different from the values specified for the net in the schematic or layout design.")
("vdrSetNetVoltageRange"
"vdrSetNetVoltageRange(
t_libName
t_cellName
l_viewList
[ ?netVoltages l_netVoltages ]
[ ?voltageDataFile t_voltageInfoFile ]
[ ?verbose { t | nil } ]
[ ?logFile t_logFile ]
)
=> t / nil"
"(ICADVM20.1 Only) Sets net voltages in the specified list of cellviews. The voltages can either be specified directly as a list when the command is called or read from voltage information file.")
("vdrSetValidLayers"
"vdrSetValidLayers(
d_cellviewID
{ l_layers | nil }
)
=> t / nil"
"Specifies a list of valid layers on which labels or markers can be generated. The software creates labels or markers only for nets on one of the listed layers. Each subsequent call to the function overrides all the previously set layers.")
("vdrTransferVSyncConstraints"
"vdrTransferVSyncConstraints(
l_srcCellview
[ l_tgtCellviews ]
)
=>"
"Transfers Voltage Synced Net (vsync) constraints from a specified source cellview to the specified target cellviews without opening any of the cellviews involved. If there is no target cellview specified, then the constraints are transferred to all open cellviews.")
("vdrVsyncVisualizerGUI"
"vdrVsyncVisualizerGUI(
)
=> t / nil"
"(ICADVM20.1 EXL Only) Opens the VDR Constraints Visualizer form, which you can use to create Voltage Synced Net (vsync) constraints from the contents of a CSV file, list the vsync constraints currently present in the layout view, and delete those that are no longer required.")